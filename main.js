!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t={cardSection:".cards__list",cardTemplate:"#card__template",cardPreviewPopup:"#card-modal-image",profilePopup:"#profile-eidit-modal",cardAddModal:"#card-add-modal",cardDeleteModal:"#delet-comfirm-modal",editAvatarModal:"#edit-avatar-modal"},r=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile__title-input")),s=document.querySelector("#profile__description-input"),i=document.querySelector(".profile__edit"),n=document.querySelector("#card__add-button"),o=(document.querySelector("#card__title-input"),document.querySelector("#card__link-input"),document.querySelector(".profile__avatar-edit"));function a(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var d=class{constructor(e,t){let{cardData:r,userId:s,handleImageClick:i,handleDeleteClick:n,handleCardLikes:o}=e;l(this,"getCardId",(()=>this._id)),l(this,"removeCard",(()=>{this._element.remove(),this._element=null})),this._link=r.link,this._title=r.name,this._userId=s,this._ownerId=r.owner._id,this._id=r._id,this._likes=r.likes,this._cardSelector=t,this._handleImageClick=i,this._handleDeleteClick=n,this._handleCardLikes=o}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_handlePreview(){this._handleImageClick(this._title,this._link)}setLikes(e){this._likes=e,this._renderLikes()}isLiked(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){this._cardLikeCount.textContent=this._likes.length||"",this.isLiked()?this._cardLikeButton.classList.add("card__like-button_toggle"):this._cardLikeButton.classList.remove("card__like-button_toggle")}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>this._handleCardLikes())),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handlePreview())),this._element.querySelector("#card-remove-button").addEventListener("click",(()=>this._handleDeleteClick()))}getView(){return this._element=this._getTemplate(),this._setEventListeners(),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._cardLikeButton=this._element.querySelector(".card__like-button"),this._cardRemoveButton=this._element.querySelector("#card-remove-button"),this._cardLikeCount=this._element.querySelector(".card__like-count"),this._cardImage.alt=this._title,this._cardImage.src=this._link,this._cardTitle.textContent=this._title,this._renderLikes(),this._userId!==this._ownerId?this._cardRemoveButton.remove():this._element}};class c{constructor(e,t){let{items:r,renderer:s}=e;this._renderer=s,this._items=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}var u=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=" ",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._form.addEventListener("reset",(()=>{setTimeout((()=>{this._toggleButtonState()}))})),this._disableButton(),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class h{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){27===e.which&&this.close()}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()}))}}class _ extends h{constructor(e){let{popupSelector:t,handleFormSubmit:r}=e;super(t),this._modalForm=this._popupElement.querySelector(".modal__form"),this._formInputs=this._modalForm.querySelectorAll(".modal__form-input"),this._handleFormSubmit=r,this._submitButtonEl=this._modalForm.querySelector(".modal__form-save"),this._submitButtonText=this._submitButtonEl.textContent}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}renderLoading(e){this._submitButtonEl.textContent=e?"Saving...":this._submitButtonText}close(){this._modalForm.reset(),super.close()}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t)}))}}const m=document.querySelector("#profile-eidit-modal"),p=document.querySelector("#card-add-form"),v=document.querySelector("#edit-avatar-modal"),b=new u(e,m),f=new u(e,p),S=new u(e,v),y=new class{constructor(e){let{baseUrl:t,headers:r}=e;a(this,"getUserInfo",(async()=>{const e=await fetch(`${this._baseUrl}/users/me`,{headers:this._headers});return this._handleResponse(e)})),a(this,"getInitialCards",(async()=>{const e=await fetch(`${this._baseUrl}/cards`,{headers:this._headers});return this._handleResponse(e)})),a(this,"editUserInfo",(async e=>{let{name:t,about:r}=e;const s=await fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})});return this._handleResponse(s)})),a(this,"setUserAvatar",(async e=>{let{avatar:t}=e;const r=await fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})});return this._handleResponse(r)})),a(this,"addCard",(async e=>{let{name:t,link:r}=e;const s=await fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})});return this._handleResponse(s)})),a(this,"deleteCardById",(async e=>{const t=await fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers,body:JSON.stringify({id:e})});return this._handleResponse(t)})),a(this,"changeCardLikeStatus",(async(e,t)=>{const r=await fetch(`${this._baseUrl}/cards/likes/${e}`,{method:t?"PUT":"DELETE",headers:this._headers,body:JSON.stringify({like:t})});return this._handleResponse(r)})),this._baseUrl=t,this._headers=r}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status} ${e.statusText}`)}_handleResponseError(e){console.log(`Error processing request ${e}`)}getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"02d7aa0c-331f-4762-a83f-c73224dbaeb3","Content-Type":"application/json"}});function E(e,r){const s=new d({cardData:e,userId:r,handleImageClick:()=>{L.open(e)},handleDeleteClick:()=>{const e=s.getCardId();k.open(),k.setSubmitAction((()=>{k.renderLoading(!0),y.deleteCardById(e).then((()=>{s.removeCard(),k.close()})).catch((e=>console.error(e))).finally((()=>k.renderLoading(!1)))}))},handleCardLikes:()=>{y.changeCardLikeStatus(s.getCardId(),!s.isLiked()).then((e=>{s.setLikes(e.likes)})).catch((e=>console.error(e)))}},t.cardTemplate);return s.getView()}let g;y.getAppInfo().then((e=>{let[r,s]=e;I.setUserInfo({name:r.name,about:r.about});const i=r.avatar;I.setAvatar(i);const n=r._id;g=new c({items:s,renderer:e=>{const t=E(e,n);g.addItem(t)}},t.cardSection),g.renderItems()})).catch((e=>{console.error(e)}));const L=new class extends h{constructor(e){super(e),this._imageElement=this._popupElement.querySelector(".modal__image-card"),this._imageCaption=this._popupElement.querySelector(".modal__caption-card")}open(e){let{name:t,link:r}=e;this._imageElement.alt=t,this._imageCaption.textContent=t,this._imageElement.src=r,super.open()}}(t.cardPreviewPopup),C=new _({popupSelector:t.cardAddModal,handleFormSubmit:e=>{C.renderLoading(!0),y.addCard(e).then((e=>{const t=E(e,e.owner._id);g.addItem(t),C.close()})).catch((e=>console.log(e))).finally((()=>C.renderLoading(!1)))}}),k=new class extends h{constructor(e){super(e),this._modalElement=document.querySelector(e),this._submitButton=this._modalElement.querySelector(".modal__form-save")}renderLoading(e){this._submitButton.textContent=e?"Deleting...":"Yes"}setSubmitAction(e){this._submitButton.addEventListener("click",e)}setEventListeners(){super.setEventListeners()}}(t.cardDeleteModal),I=new class{constructor(e){let{nameSelector:t,jobSelector:r,avatarSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(r),this._avatarElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,about:this._jobElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{name:t,about:r}=e;this._nameElement.textContent=t,this._jobElement.textContent=r}setAvatar(e){this._avatarElement.src=e}}({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:".profile__avatar"}),q=new _({popupSelector:t.profilePopup,handleFormSubmit:e=>{q.renderLoading(!0),y.editUserInfo(e).then((e=>{I.setUserInfo({name:e.name,about:e.about,avatar:e.avatar}),q.close()})).catch((e=>console.error(e))).finally((()=>q.renderLoading(!1)))}}),w=new _({popupSelector:t.editAvatarModal,handleFormSubmit:e=>{w.renderLoading(!0),y.setUserAvatar(e).then((e=>{I.setAvatar(e),w.close()})).catch((e=>{console.log(e)})).finally((()=>w.renderLoading(!1)))}});i.addEventListener("click",(()=>{const{name:e,about:t}=I.getUserInfo();(e=>{let{name:t,about:i}=e;r.value=t,s.value=i})({name:e,about:t}),q.open()})),n.addEventListener("click",(()=>{C.open()})),o.addEventListener("click",(()=>{w.open()})),C.setEventListeners(),k.setEventListeners(),L.setEventListeners(),q.setEventListeners(),w.setEventListeners(),b.enableValidation(),f.enableValidation(),S.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,